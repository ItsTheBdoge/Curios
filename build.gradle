buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url 'https://plugins.gradle.org/m2/' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.4.0'
    }
}
apply plugin: 'eclipse'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'com.matthewprenger.cursegradle'
apply plugin: 'maven-publish'

version = "${mod_version}"
group = "${mod_group}"
archivesBaseName = "${mod_id}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: 'snapshot', version: "${version_mcp}"

    runs {
        client {
            workingDirectory project.file('run')
            
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                curios {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                curios {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${version_forge}"
    compileOnly fg.deobf("mezz.jei:jei-${version_mc}:${version_jei}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${version_mc}:${version_jei}")
}

repositories {
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
}

sourceSets {
    main {
        resources {
            srcDirs += 'docs'
        }
    }
}

jar {
    manifest {
        attributes(["Specification-Title": "${mod_name}",
                    "Specification-Vendor": "${mod_author}",
                    "Specification-Version": "${version}",
                    "Implementation-Title": "${mod_name}",
                    "Implementation-Version": "${version}",
                    "Implementation-Vendor" :"${mod_author}",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")],)
    }
}

def reobfFile = file("build/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}

task apiJar(type: Jar) {
    classifier = 'api'
    include 'top/theillusivec4/curios/api/**/*'
    from sourceSets.main.allSource
    from sourceSets.main.output
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task deobfJar(type: Jar) {
    classifier = 'deobf'
    from sourceSets.main.output
}

tasks.build.dependsOn apiJar, sourcesJar, deobfJar

processResources {

    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'
        expand 'version': project.version, 'mod_id' : mod_id, 'mod_name': mod_name, 'mod_url': mod_url, 'mod_author': mod_author, 'mod_description': mod_description, 'mod_icon': mod_icon
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'META-INF/mods.toml'
    }
}

curseforge {

    project {
        apiKey = findProperty('curseKey') ?: 0
        id = "${curse_id}"
        releaseType = "${curse_release}"
        changelogType = 'markdown'
        changelog = file('docs/CHANGELOG.md')
        addArtifact(sourcesJar)
        addArtifact(apiJar)
        addArtifact(deobfJar)
    }
}

publishing {
    tasks.publish.dependsOn 'build'
    publications {

        mavenJava(MavenPublication) {
            artifactId project.archivesBaseName
            
            artifact reobfArtifact
            artifact deobfJar
            artifact sourcesJar
            artifact apiJar
        }
    }

    repositories {

        if (project.hasProperty('urlMaven')) {

            if (project.hasProperty('userMaven') && project.hasProperty('passMaven')) {

                maven {
                    url urlMaven
                    credentials {
                        username userMaven
                        password passMaven
                    }
                }
            }
        }
    }
}